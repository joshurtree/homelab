services:
    rproxy:
        image: nginx:latest
        container_name: rproxy
        restart: always
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./contexts/nginx/conf:/etc/nginx/conf.d:ro
            - certbot-conf:/etc/letsencrypt:ro
        links:
            - cloud
            - iot
            - dash
    nginx-pm:
        image: jc21/nginx-pr oxy-manager:latest
        container_name: nginx-pm
        volumes: 
            - ./contexts/nginx-pm:/data
            - /etc/letsencrypt:/etc/letsencrypt:rw
        ports:
            - "80:80"
            - "443:443"
            - "81:81"
        restart: unless-stopped
        profiles: [ "nginx-pm"]

    traefik:
        image: traefik:v2.10
        command: 
            - "--providers.docker"
            # Only enabled containers should be exposed
            - "--providers.docker.exposedByDefault=false"
            # We want to use the dashbaord
            - "--api.dashboard=true"
            # The entrypoints we ant to expose
            - "--entrypoints.web.address=:80"
            - "--entrypoints.websecure.address=:443"
            # Enable ACME (Let's Encrypt): automatic SSL.
            - "--certificatesresolvers.letsencrypt.acme.email=joshurtree@gmail.com"
            - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
            - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
            - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
            # Global redirect to https
            - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
            - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            # The acme.json file is required by Let's Encrypt
            - ./contexts/proxy/acme.json:/etc/traefik/acme/acme.json
        labels:
            # Since we don't expose containers per default we also need to enable traefik to expose the dashboard.
            - "traefik.enable=true"
            # http
            # Since we are using the http challenge we and use the redirect we need 
            #  to enable the http entrypoint.
            - "traefik.http.routers.dashboard-http.entrypoints=web"
            # The domain we want to listen to
            - "traefik.http.routers.dashboard-http.rule=Host(`*.joshandrews.xyz`)"
            # We need to attach the api@internal service to the dashboard-http router
            #  in order for the dashboard to be able to access the api (I think ðŸ™ˆ)
            - "traefik.http.routers.dashboard-http.service=api@internal"
            # https
            # Enable the https entrypoint
            - "traefik.http.routers.dashboard.entrypoints=websecure"
            # The domain we want to listen to
            - "traefik.http.routers.dashboard.rule=Host(`*.joshandrews.xyz`)"
            # We want to obtain a certificate through Let's Encrypt
            - "traefik.http.routers.dashboard.tls=true"
            - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
            # We need to attach the api@internal service to the dashboard router
            #  in order for the dashboard to be able to access the api (I think ðŸ™ˆ)
            - "traefik.http.routers.dashboard.service=api@internal"
        profiles: ["traefik"]

    cloudflared:
        image: joshurtree/cloudflared
        container_name: cloudflared
        environment:
            - TOKEN_FILE=/run/secrets/cloudflare
        entrypoint: ["/bin/bash", "./init.sh", "tunnel", "--no-autoupdate"]
        profiles: ["tunnel"]
        